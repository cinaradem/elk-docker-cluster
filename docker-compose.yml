version: "3.8"
services:
  docker1:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: -7.10.1
    volumes:
      - type: bind
        source: ./elasticsearch/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - /elastic:/usr/share/elasticsearch/data
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      - node.name=docker1
      - discovery.seed_hosts=docker2
      - cluster.initial_master_nodes=docker1,docker2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms${ES_HEAP_SIZE:-2g} -Xmx${ES_HEAP_SIZE:-2g}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    network_mode: "host"

  docker2:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: ${ELK_VERSION:-7.10.1}
    volumes:
      - type: bind
        source: ./elasticsearch/elasticsearch.yml
        target: /usr/share/elasticsearch/config/elasticsearch.yml
        read_only: true
      - /elastic:/usr/share/elasticsearch/data
    environment:
      - node.name=docker2
      - discovery.seed_hosts=docker1
      - cluster.initial_master_nodes=docker1,docker2
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms${ES_HEAP_SIZE:-2g} -Xmx${ES_HEAP_SIZE:-2g}"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    network_mode: "host"

  kibana1:
    build:
      context: kibana/
      args:
        ELK_VERSION: ${ELK_VERSION:-7.10.1}
    volumes:
      - type: bind
        source: ./kibana/kibana.yml
        target: /usr/share/kibana/config/kibana.yml
        read_only: true
    ports:
      - 5601:5601
    # depends_on:
    #   - docker1
    #   - docker2
    network_mode: "host"

  # web_server:
  #   build:
  #     context: ./nginx
  #   restart: always
  #   ports:
  #     - 80:80
  #   volumes:
  #     - ./nginx/nginx.conf:/etc/nginx/nginx.conf
